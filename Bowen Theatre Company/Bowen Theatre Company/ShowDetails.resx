<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIADLBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAlw
        SFlzAAB7CAAAewgBeCQdoQAABH1JREFUWMO9V0sotG8UP++8LyO3DZkht9yJ7IyNYqNcykIiudWEjUtT
        n7+IxWSm7GUhUkpiM2Fh4bZQlMSgXJqr3Ib6m3nN5D9Gxu+/4e2bb8yYb4qnzuJ9n3P5nXOe8zznEAAC
        QJ2dnR2hoaH/EpH9O4llWWtTU9OvD7sEgJRK5S8iwk9Sb2+vGgCxMTEx7f39/WP0w2t3d7dEJBI5mXdE
        fldiYiIxDENXV1cBKU9PTye3200XFxcB8bt8hSk5ORmTk5Ow2+1wOBwoLy//MrQ1NTVwu92wWq2YmJhA
        amqqP34nvR+Oz3IEp9OJP1dWVpZPhQUFBV78LpcLCoXCl4zdCwDHcdBoNIKCs7MzrKysoL6+HlNTUzAY
        DD4BGAwGHBwcQC6XY3V1FU9PT4KexcVFhISE+AcQFhYGrVbr4cHW1pYgMD09DQCorq72Mt7Q0AAAGB4e
        Fv79qev4+BjR0dGfAwgJCfHwfGZmBvv7+3h7e8Pa2hrMZrOwNz4+7gVgfn4eAIS0DQwM4PDwEDabDSaT
        SZBdXl4Gy7LeAMRiMe7v7/Hy8oKdnR0QERQKBT5bq6urHsYZhsHe3p6w/3vo29raQERYWlrCy8sLdDod
        OI77PAVKpRIAEBkZCalUitvbW/A8D57n4XA4PM5FRESEAEAikeDu7g7X19fQ6/W4vLzE8/MzbDYbzs/P
        ERUVBZZlAQDd3d2+zwDLsjg9PYXRaMTJyQkAwGQyCR6NjIxgaGgIZ2dnyMnJERQVFhbi9fUVUqkUFRUV
        AlCLxQIA2N7extraGo6OjsAwjP8qSE9PFxTo9Xo8PDzg6uoKZWVlAs/CwgJKSkqE7/z8fABAXl6eUMIz
        MzNwuVwepSyVSr8uQyJCZmYmDg8PBcH29nYQEcbGxvDw8IC9vT2EhYUJ/OHh4eB5Ho+Pj0KFpKSkCPLr
        6+tITEwM7B74nfr6+mA2m7GxsYHh4WFB4ejoqBevSqXyCL3VaoVWq4VcLvd3E9qZdwBRvu5phmGoo6OD
        Kisrye12k1gspomJCVpeXvbgq6qqoq6uLuJ5npxOJ62vr9Pc3NxXz4DDbwR8UU9PD2QymfBdVFSE3t7e
        YJ5le1AA4uPjoVarIRKJQERQq9VISEgICsCXKfC1SktLKTY2loiIrFYrbW5uBtMWOIIGQEQ0OTlJIpGI
        5HJ5sH2JgwtWUiKRkF6vJ4ZhSCqV0t3dXdDdkT2Ynm5gYADx8fGQSCQYHBwMtje0i4JBXFtbSxaLhSwW
        C93f39PNzQ3V1dUF5f1fA8jOzqaCggKanZ0V/s3OzlJeXh7l5uZ+bwo4joNSqfy0LcvIyIBSqURoaOj3
        paClpYWOjo5Ip9N57RkMBtJqtdTc3Pw9KZDJZBQXF0cajcYnz+LiIsXGxlJxcfFfgXB+FaqkpCSoVKrP
        nlMvkkgkUKlUSE5ODiQF/wU0mKSkpBDHcWQ0GgPyKC0tjd7e3gIbTEZGRn58LvwghUKhJgCkUCjUP228
        tbV1XJiOAVBjY+M/LMvavns8ZxiGr6mpUX/Y/R/75eaMl321pwAAAABJRU5ErkJggg==
</value>
  </data>
</root>